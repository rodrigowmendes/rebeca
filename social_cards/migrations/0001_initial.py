# Generated by Django 3.0 on 2020-01-25 18:23

from django.db import migrations, models
import django.db.models.deletion
import social_cards.utils


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Nome da cidade')),
                ('federal_unit', models.CharField(choices=[('AC', 'Acre (AC)'), ('AL', 'Alagoas (AL)'), ('AP', 'Amapá (AP)'), ('AM', 'Amazonas (AM)'), ('BA', 'Bahia (BA)'), ('CE', 'Ceará (CE)'), ('DF', 'Distrito Federal (DF)'), ('ES', 'Espírito Santo (ES)'), ('GO', 'Goiás (GO)'), ('MA', 'Maranhão (MA)'), ('MT', 'Mato Grosso (MT)'), ('MS', 'Mato Grosso do Sul (MS)'), ('MG', 'Minas Gerais (MG)'), ('PA', 'Pará (PA)'), ('PB', 'Paraíba (PB)'), ('PR', 'Paraná (PR)'), ('PE', 'Pernambuco (PE)'), ('PI', 'Piauí (PI)'), ('RJ', 'Rio de Janeiro (RJ)'), ('RN', 'Rio Grande do Norte (RN)'), ('RS', 'Rio Grande do Sul (RS)'), ('RO', 'Rondônia (RO)'), ('RR', 'Roraima (RR)'), ('SC', 'Santa Catarina (SC)'), ('SP', 'São Paulo (SP)'), ('SE', 'Sergipe (SE)'), ('TO', 'Tocantins (TO)')], max_length=2, verbose_name='UF')),
            ],
            options={
                'verbose_name': 'Cidade',
                'verbose_name_plural': 'Cidades',
            },
        ),
        migrations.CreateModel(
            name='Neighborhood',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Nome do bairro')),
            ],
            options={
                'verbose_name': 'Bairro',
                'verbose_name_plural': 'Bairros',
            },
        ),
        migrations.CreateModel(
            name='SocialBenefit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Nome')),
            ],
            options={
                'verbose_name': 'Benefício social',
                'verbose_name_plural': 'Benefícios sociais',
            },
        ),
        migrations.CreateModel(
            name='Record',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nome usuárix')),
                ('date_of_birth', models.DateField(verbose_name='Data de nascimento')),
                ('cpf', models.CharField(max_length=11, unique=True, validators=[social_cards.utils.validate_cpf], verbose_name='CPF ')),
                ('gender', models.CharField(choices=[('Masculino', 'Masculino'), ('Feminino', 'Feminino'), ('Transgênero', 'Transgênero'), ('Não binário', 'Não binário'), ('Outros', 'Outros')], default='Não declarado', max_length=20, verbose_name='Gênero')),
                ('race', models.CharField(choices=[('Branca', 'Branca'), ('Negra', 'Negra'), ('Parda', 'Parda'), ('Amarela', 'Amarela'), ('Indígena', 'Indígena')], default='Não declarada', max_length=20, verbose_name='Raça')),
                ('scholarity', models.CharField(choices=[('Ensino Fundamental incompleto', 'Ensino Fundamental incompleto'), ('Ensino Fundamental em andamento', 'Ensino Fundamental em andamento'), ('Ensino Fundamental completo', 'Ensino Fundamental completo'), ('Ensino Médio incompleto', 'Ensino Médio incompleto'), ('Ensino Médio em andamento', 'Ensino Médio em andamento'), ('Ensino Médio completo', 'Ensino Médio completo'), ('Ensino Superior incompleto', 'Ensino Superior incompleto'), ('Ensino Superior em andamento', 'Ensino Superior em andamento'), ('Ensino Superior completo', 'Ensino Superior completo')], max_length=50, verbose_name='Escolaridade')),
                ('debts', models.CharField(choices=[('Sim', 'Sim'), ('Não', 'Não')], max_length=3, verbose_name='Dídivas')),
                ('agreement', models.CharField(choices=[('Sim', 'Sim'), ('Não', 'Não')], max_length=3, verbose_name='Possui convênio')),
                ('family_composition', models.IntegerField(verbose_name='Composição familiar')),
                ('estimated_income', models.CharField(choices=[('Até um salário mínimo', 'Até um salário mínimo'), ('De um a dois salários mínimos', 'De um a dois salários mínimos'), ('De dois a três salários mínimos', 'De dois a três salários mínimos'), ('Mais de três salários mínimos', 'Mais de três salários mínimos')], max_length=32, verbose_name='Renda estimada')),
                ('source_of_income', models.CharField(choices=[('Informal apenas', 'Informal apenas'), ('Formal apenas', 'Formal apenas'), ('Ambas', 'Ambas')], max_length=30, verbose_name='Fonte da renda')),
                ('housing_condition', models.CharField(choices=[('Própria', 'Pŕopria'), ('Alugada', 'Alugada'), ('Cedida', 'Cedida'), ('Financiada', 'Financiada')], max_length=30, verbose_name='Condição de moradia')),
                ('treatment', models.CharField(choices=[('Até um ano', 'Até um ano'), ('Um a dois anos', 'Um a dois anos'), ('Dois a três anos', 'Dois a três anos'), ('Mais de três anos', 'Mais de três anos')], max_length=30, verbose_name='Tempo de tratamento')),
                ('medication_origin', models.CharField(choices=[('Farmácia municipal', 'Farmácia municipal'), ('Compra', 'Compra'), ('Farmácia municipal e compra', 'Farmácia municipal e compra'), ('Outros', 'Outros')], max_length=30, verbose_name='Origem da medicação')),
                ('health_problems_in_family', models.CharField(choices=[('Não', 'Não'), ('Sim, são tratados', 'Sim, são tratados'), ('Sim, não são tratados', 'Sim, não são tratados')], max_length=30, verbose_name='Doenças na família')),
                ('old_people_in_family', models.CharField(choices=[('Sim', 'Sim'), ('Não', 'Não')], max_length=3, verbose_name='Idosos na família')),
                ('disabled_in_family', models.CharField(choices=[('Sim', 'Sim'), ('Não', 'Não')], max_length=3, verbose_name='Deficientes na família')),
                ('early_pregnancy', models.CharField(choices=[('Sim', 'Sim'), ('Não', 'Não')], max_length=3, verbose_name='Gravidez precoce')),
                ('pregnant_or_lactating', models.CharField(choices=[('Sim', 'Sim'), ('Não', 'Não')], max_length=3, verbose_name='Gestante ou lactante')),
                ('alcohol_or_drug_user', models.CharField(choices=[('Sim', 'Sim'), ('Não', 'Não')], max_length=3, verbose_name='Usuário de álcool ou drogas')),
                ('natural_from', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='social_cards.City', verbose_name='Naturalidade')),
                ('neighborhood', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='social_cards.Neighborhood', verbose_name='Bairro')),
                ('social_benefits', models.ManyToManyField(blank=True, to='social_cards.SocialBenefit', verbose_name='Benefícios sociais')),
            ],
            options={
                'verbose_name': 'Questionário',
                'verbose_name_plural': 'Questionários',
            },
        ),
    ]
